/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * interfaz.java
 *
 * Created on 21/08/2018, 07:44:27 AM
 */

package analizador;

import static analizador.Main.generarLexer;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import static java.lang.Thread.sleep;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.util.Scanner;
import java.io.File;


/**
 *
 * @author Edgar
 */
public class interfaz extends javax.swing.JFrame {
    
    public File Archivo,Archivo2;
    public String ubicacion, ubicacion2,out;
    
    public final static int GENERAR = 1;
    public final static int EJECUTAR = 2;
    public final static int SALIR = 3;
    
    static String ruta;
   
     //Main Principal=new Main();   
    /** Creates new form interfaz */
    
    public interfaz() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Analizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Ubicacion");

        jLabel2.setText("Resultado");

        jButton2.setText("Limpiar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Buscar Archivo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel3.setText("Lexer");

        jButton4.setText("Agregar Ruta");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField2.setText("C:\\Users\\Pimentel\\Desktop\\MiniC#\\src\\analizador\\Lexer.flex");

        jButton5.setText("Generar Lexer");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Analizar Sintactico");
        jButton6.setToolTipText("");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(63, 63, 63))
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton3))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton4)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jButton1)
                        .addGap(58, 58, 58)
                        .addComponent(jButton2)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if ("".equals(jTextField1.getText())) 
        {
           JOptionPane.showMessageDialog(null, "No ha seleccionado un archivo");
        }
        else
        {
            
           
            try {
                probarArchivoLexer();
            } catch (IOException ex) {
                Logger.getLogger(interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
             

            
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTextField1.setText("ubicacion");
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         String Direccion = System.getProperty("user.home");
        JFileChooser Seleccionar = new JFileChooser(Direccion + "/Desktop");
        //Seleccionar.addChoosableFileFilter(new FileNameExtensionFilter("Archivo de Texto (.php)", "php"));
        Seleccionar.addChoosableFileFilter(new FileNameExtensionFilter("Archivo de Texto (.txt)", "txt"));     
        Seleccionar.addChoosableFileFilter(new FileNameExtensionFilter("Archivo de Texto (.frag)", "frag"));   
        Seleccionar.setAcceptAllFileFilterUsed(false);
        Seleccionar.showDialog(this,"Seleccionar");
        Archivo = Seleccionar.getSelectedFile();
        ubicacion = Archivo.getAbsolutePath();
        jTextField1.setText(ubicacion);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String Direccion = System.getProperty("user.home");
        JFileChooser Seleccionar = new JFileChooser(Direccion + "/Desktop");
        Seleccionar.addChoosableFileFilter(new FileNameExtensionFilter("Archivo de Texto (.flex)", "flex"));       
        Seleccionar.setAcceptAllFileFilterUsed(false);
        Seleccionar.showDialog(this,"Seleccionar");
        Archivo2 = Seleccionar.getSelectedFile();
        ubicacion2 = Archivo2.getAbsolutePath();
        jTextField2.setText(ubicacion2);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //Principal.main(jTextField2.getText());
        
        String path =jTextField2.getText();
        generarLexer(path);
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        //ruta=ubicacion;
        //String[] RutaArchivo={ruta};
        
        //AnalizadorSintactico.main(RutaArchivo);
        
        String[] archivoPrueba = {ubicacion};
        AnalizadorSintactico.main(archivoPrueba);
        System.out.println("Ejecutado!");
        
        
    }//GEN-LAST:event_jButton6ActionPerformed
    public static boolean moverArch(String archNombre) {
        boolean efectuado = false;
        File arch = new File(archNombre);
        if (arch.exists()) {
            System.out.println("\n*** Moviendo " + arch + " \n***");
            Path currentRelativePath = Paths.get("");
            String nuevoDir = currentRelativePath.toAbsolutePath().toString()
                    + File.separator + "src" + File.separator
                    + "analizador" + File.separator + arch.getName();
            File archViejo = new File(nuevoDir);
            archViejo.delete();
            if (arch.renameTo(new File(nuevoDir))) {
                System.out.println("\n*** Generado " + archNombre + "***\n");
                efectuado = true;
            } else {
                System.out.println("\n*** No movido " + archNombre + " ***\n");
            }

        } else {
            System.out.println("\n*** Codigo no existente ***\n");
        }
        return efectuado;
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interfaz().setVisible(true);
            }
        });
        
        
    }
    public void LecturaArchivo() throws FileNotFoundException, IOException{
    
        
        File fichero=new File(ubicacion);
        
            String linea;
            if (fichero.exists()) {
                FileReader archivo =new FileReader(ubicacion);
                BufferedReader leer =new BufferedReader(archivo);
                linea=leer.readLine();
                
                while(linea!=null){
                    //writer.println(linea.toLowerCase() + "\n");
                    linea=leer.readLine();
      
                }
            }
            
            //writer.close();
        
    }
    
    public void probarArchivoLexer() throws IOException{
        
        int cont=1,cont1=1,fila=0,cantidad=0;
        char[] text,text1;
        LecturaArchivo();
        if(jTextField1!=null){
            FileInputStream reader = new FileInputStream(ubicacion);
            Lexer lexer = new Lexer (reader);
            String resultado="";
            //String resultado1="";
            String errores="";
            
            PrintWriter writer1;
            
            text1=ubicacion.toCharArray();
                        for (int i = 0; i < text1.length; i++) {
                            if(text1[i]=='.')
                            {
                                cantidad=i;
                            }
                        }
                            
            out=ubicacion.substring(0, cantidad);
            File salida = new File (out+".out");
            writer1 = new PrintWriter(salida);
            
            while(true){
            Token token = lexer.yylex();
//           
            if (token ==null)
            {
             
                        
                //se imprime el archivo
                //indica que el archivo es correcto
                JOptionPane.showMessageDialog(null, "¡El archivo se analizo correctamente, pertenece a MiniC#!");

                writer1.close();


                return;
            }
            
            
                switch(token) {
                    
                    case T_CONST_BOOLEANO:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme +"\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token+" (valor = "+lexer.lexeme+")" + "\n");
                        cont1=fila+1; 
                        break;
                        
                    case T_CONST_ENTERO:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme +"\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token+" (valor = "+lexer.lexeme+")" + "\n");
                        cont1=fila+1;  
                        break;
                    
                    case T_CONST_DOUBLE:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme +"\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token+" (valor = "+lexer.lexeme+")" + "\n");
                        cont1=fila+1;  
                        break;    
                        
                    case T_CONST_STRING:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme +"\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token+" (valor = "+lexer.lexeme+")" + "\n");
                        cont1=fila+1;  
                        break;     
                        
                    case T_VOID:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_INT:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break;  
                        
                    case T_DOUBLE:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break; 
                        
                    case T_BOOL:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break; 
                        
                    case T_STRING:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break; 
                        
                    case T_CLASS:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break; 
                        
                    case T_INTERFACE:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break; 
                        
                    case T_NULL:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break; 
                        
                    case T_THIS:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break; 
                        
                    case T_EXTENDS:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "   linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_IMPLEMENTS:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme +"\t" +"\t"+"\t" + "linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_FOR:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_WHILE:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1; 
                        break;
                        
                    case T_IF:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_ELSE:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_RETURN:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_BREAK:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_NEW:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_NEWARRAY:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1; 
                        break;
                    
                    case T_SUMA:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: "+ "'" +lexer.lexeme+ "'" + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_RESTA:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: "+ "'" +lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_MULTIPLICACION:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_DIVISION:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_PROCENTAJE:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: "+ "'" +lexer.lexeme+ "'" + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_MENOR:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme+ "'" + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_MENORIGUAL:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_MAYOR:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_MAYORIGUAL:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_IGUAL:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_IGUALDAD:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme+ "'" + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_DIFERENTE:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_AND:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme+ "'" + "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_OR:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: "+ "'" +lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_NEGACION:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: "+ "'" +lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_PUNTOYCOMA:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: "+ "'" +lexer.lexeme+ "'" + "\n");
                        cont1=fila+1;  
                        break;
                        

                        
                    case T_COMA:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_PUNTO:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_CORCHIZQ:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_CORCHDER:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_PARENIZQ:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+ lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_PARENDER:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_LLAVEIZQ:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_LLAVEDER:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_CORCHETES:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: "+ "'" +lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_PARENTESIS:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_LLAVES:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " + "'"+lexer.lexeme + "'"+ "\n");
                        cont1=fila+1;  
                        break;
                        
                    case T_IDENTIFICADOR:
                        if(lexer.lexeme.length()<31)
                        {
                            resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                            jTextArea1.setText(resultado);
                            fila=lexer.lexeme.length()+cont1-1;
                            writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                            cont1=fila+1; 
                        }

                        else
                        {
                            String truncar;
                            truncar=lexer.lexeme.substring(0, 31);
                            resultado=resultado+"TOKEN: " + token + " " + truncar + "\n";
                            jTextArea1.setText(resultado);
                            fila=lexer.lexeme.length()+cont1-1;
                            writer1.print(truncar + "\t" +"\t"+"\t" +"linea "+cont+ " columnas:"+cont1+"-"+fila  +" Token: " +token +" Error truncando el identificador" +"\n");
                            cont1=fila+1;
                        }
                        
                        break;
                        
                    case ENTER:
                        
                        cont++;
                        cont1=1;
                        
                        break;
                        
                    case WHITE:
                        cont1++;
                        break;
                        
                    case COMENTARIO1:
                        text=lexer.lexeme.toCharArray();
                        for (int i = 0; i < text.length; i++) {
                            if(text[i]=='\n')
                            {
                                cont++;
                            }
                        }
                            
                        
                        break;
                        
                    case COMENTARIO2:
                        text=lexer.lexeme.toCharArray();
                        for (int i = 0; i < text.length; i++) {
                            if(text[i]=='\n')
                            {
                                cont++;
                            }
                        }
                          
                        
                        break;
                                       
                    case ERROR:
                        resultado=resultado+ "Error, el token no pertenece a MiniC# " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        cont1=fila+1;  
                        writer1.print("*** Error linea " + cont+ ".*** El caracter: "+ "'"+lexer.lexeme+ "'"+ " ,No pertenece a MiniC# " + "\n");
                        
                        break;
                        
                    case ERROR1:
                        resultado=resultado+ "Error, el token no pertenece a MiniC# " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        //fila=lexer.lexeme.length()+cont1-1;
                        //cont1=fila+1;  
                        writer1.print("*** Error linea " + cont+ ".*** Token: '/*', Invalido nunca cerro el comentario" + "\n");
                        
                        break;
                        
                        
              
                                     
                    default:
                        resultado=resultado+"TOKEN: " + token + " " + lexer.lexeme + "\n";
                        jTextArea1.setText(resultado);
                        fila=lexer.lexeme.length()+cont1-1;
                        writer1.print(lexer.lexeme + "\t" +"\t"+"\t" +"linea "+cont+1+ " columnas:"+cont1+"-"+fila  +" Token: " +token + "\n");
                        cont1=fila+1;  
                }
                
            }
        }
        
       
        
        
        
 }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

}
