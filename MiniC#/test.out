int			linea 1 columnas:1-3 Token: T_INT
hola			linea 1 columnas:5-8 Token: T_IDENTIFICADOR
;			linea 1 columnas:9-9 Token: ';'
bool			linea 2 columnas:1-4 Token: T_BOOL
prueba			linea 2 columnas:6-11 Token: T_IDENTIFICADOR
;			linea 2 columnas:12-12 Token: ';'
string			linea 3 columnas:1-6 Token: T_STRING
hola2			linea 3 columnas:8-12 Token: T_IDENTIFICADOR
;			linea 3 columnas:13-13 Token: ';'
int			linea 7 columnas:1-3 Token: T_INT
hola			linea 7 columnas:5-8 Token: T_IDENTIFICADOR
(			linea 7 columnas:10-10 Token: '('
)			linea 7 columnas:12-12 Token: ')'
{			linea 8 columnas:1-1 Token: '{'
if			linea 9 columnas:2-3 Token: T_IF
(			linea 9 columnas:4-4 Token: '('
hola			linea 9 columnas:5-8 Token: T_IDENTIFICADOR
<			linea 9 columnas:9-9 Token: '<'
hola3			linea 9 columnas:10-14 Token: T_IDENTIFICADOR
)			linea 9 columnas:15-15 Token: ')'
{			linea 10 columnas:2-2 Token: '{'
int			linea 11 columnas:3-5 Token: T_INT
hff			linea 11 columnas:7-9 Token: T_IDENTIFICADOR
;			linea 11 columnas:10-10 Token: ';'
5			linea 13 columnas:3-3 Token: T_CONST_ENTERO (valor = 5)
+			linea 13 columnas:4-4 Token: '+'
5			linea 13 columnas:5-5 Token: T_CONST_ENTERO (valor = 5)
;			linea 13 columnas:9-9 Token: ';'
this			linea 15 columnas:3-6 Token: T_THIS
;			linea 15 columnas:7-7 Token: ';'
ReadLine			linea 17 columnas:3-10 Token: T_IDENTIFICADOR
()			linea 17 columnas:11-12 Token: '()'
;			linea 17 columnas:13-13 Token: ';'
HOOLA			linea 19 columnas:3-7 Token: T_IDENTIFICADOR
=			linea 19 columnas:9-9 Token: '='
4			linea 19 columnas:11-11 Token: T_CONST_ENTERO (valor = 4)
+			linea 19 columnas:12-12 Token: '+'
4			linea 19 columnas:13-13 Token: T_CONST_ENTERO (valor = 4)
;			linea 19 columnas:14-14 Token: ';'
New			linea 21 columnas:3-5 Token: T_NEW
(			linea 21 columnas:6-6 Token: '('
hola			linea 21 columnas:7-10 Token: T_IDENTIFICADOR
)			linea 21 columnas:11-11 Token: ')'
;			linea 21 columnas:12-12 Token: ';'
ReadInteger			linea 23 columnas:3-13 Token: T_IDENTIFICADOR
(			linea 23 columnas:14-14 Token: '('
)			linea 23 columnas:16-16 Token: ')'
;			linea 23 columnas:17-17 Token: ';'
gkl			linea 25 columnas:3-5 Token: T_IDENTIFICADOR
=			linea 25 columnas:6-6 Token: '='
5			linea 25 columnas:8-8 Token: T_CONST_ENTERO (valor = 5)
+			linea 25 columnas:9-9 Token: '+'
4			linea 25 columnas:10-10 Token: T_CONST_ENTERO (valor = 4)
+			linea 25 columnas:11-11 Token: '+'
(			linea 25 columnas:12-12 Token: '('
4			linea 25 columnas:13-13 Token: T_CONST_ENTERO (valor = 4)
)			linea 25 columnas:14-14 Token: ')'
;			linea 25 columnas:15-15 Token: ';'
NewArray			linea 27 columnas:3-10 Token: T_NEWARRAY
(			linea 27 columnas:11-11 Token: '('
5			linea 27 columnas:13-13 Token: T_CONST_ENTERO (valor = 5)
,			linea 27 columnas:14-14 Token: ','
int			linea 27 columnas:15-17 Token: T_INT
)			linea 27 columnas:19-19 Token: ')'
;			linea 27 columnas:20-20 Token: ';'
prueba			linea 29 columnas:3-8 Token: T_IDENTIFICADOR
.			linea 29 columnas:9-9 Token: '.'
GetByte			linea 29 columnas:10-16 Token: T_IDENTIFICADOR
(			linea 29 columnas:17-17 Token: '('
5			linea 29 columnas:18-18 Token: T_CONST_ENTERO (valor = 5)
)			linea 29 columnas:19-19 Token: ')'
(			linea 29 columnas:20-20 Token: '('
5			linea 29 columnas:21-21 Token: T_CONST_ENTERO (valor = 5)
)			linea 29 columnas:22-22 Token: ')'
;			linea 29 columnas:23-23 Token: ';'
hola			linea 31 columnas:3-6 Token: T_IDENTIFICADOR
.			linea 31 columnas:7-7 Token: '.'
ssd			linea 31 columnas:8-10 Token: T_IDENTIFICADOR
;			linea 31 columnas:11-11 Token: ';'
HOLA			linea 33 columnas:3-6 Token: T_IDENTIFICADOR
[			linea 33 columnas:8-8 Token: '['
5			linea 33 columnas:10-10 Token: T_CONST_ENTERO (valor = 5)
&&			linea 33 columnas:12-13 Token: '&&'
5			linea 33 columnas:15-15 Token: T_CONST_ENTERO (valor = 5)
]			linea 33 columnas:17-17 Token: ']'
;			linea 33 columnas:18-18 Token: ';'
if			linea 43 columnas:3-4 Token: T_IF
(			linea 43 columnas:5-5 Token: '('
hola			linea 43 columnas:6-9 Token: T_IDENTIFICADOR
||			linea 43 columnas:11-12 Token: '||'
hola3			linea 43 columnas:13-17 Token: T_IDENTIFICADOR
)			linea 43 columnas:18-18 Token: ')'
{			linea 44 columnas:3-3 Token: '{'
while			linea 45 columnas:4-8 Token: T_WHILE
(			linea 45 columnas:9-9 Token: '('
hola			linea 45 columnas:10-13 Token: T_IDENTIFICADOR
!=			linea 45 columnas:14-15 Token: '!='
3			linea 45 columnas:16-16 Token: T_CONST_ENTERO (valor = 3)
)			linea 45 columnas:17-17 Token: ')'
{			linea 46 columnas:4-4 Token: '{'
for			linea 47 columnas:5-7 Token: T_FOR
(			linea 47 columnas:9-9 Token: '('
i			linea 47 columnas:11-11 Token: T_IDENTIFICADOR
=			linea 47 columnas:12-12 Token: '='
0			linea 47 columnas:13-13 Token: T_CONST_ENTERO (valor = 0)
;			linea 47 columnas:14-14 Token: ';'
i			linea 47 columnas:16-16 Token: T_IDENTIFICADOR
<			linea 47 columnas:17-17 Token: '<'
5			linea 47 columnas:18-18 Token: T_CONST_ENTERO (valor = 5)
;			linea 47 columnas:19-19 Token: ';'
i			linea 47 columnas:21-21 Token: T_IDENTIFICADOR
+			linea 47 columnas:22-22 Token: '+'
1			linea 47 columnas:23-23 Token: T_CONST_ENTERO (valor = 1)
)			linea 47 columnas:24-24 Token: ')'
this			linea 47 columnas:26-29 Token: T_THIS
;			linea 47 columnas:30-30 Token: ';'
return			linea 48 columnas:5-10 Token: T_RETURN
;			linea 48 columnas:11-11 Token: ';'
break			linea 49 columnas:5-9 Token: T_BREAK
;			linea 49 columnas:10-10 Token: ';'
}			linea 50 columnas:4-4 Token: '}'
}			linea 51 columnas:3-3 Token: '}'
}			linea 53 columnas:2-2 Token: '}'
}			linea 54 columnas:1-1 Token: '}'
int			linea 56 columnas:1-3 Token: T_INT
metodoEntero			linea 56 columnas:5-16 Token: T_IDENTIFICADOR
(			linea 56 columnas:17-17 Token: '('
int			linea 56 columnas:18-20 Token: T_INT
go			linea 56 columnas:22-23 Token: T_IDENTIFICADOR
,			linea 56 columnas:25-25 Token: ','
string			linea 56 columnas:27-32 Token: T_STRING
go			linea 56 columnas:34-35 Token: T_IDENTIFICADOR
)			linea 56 columnas:36-36 Token: ')'
{			linea 57 columnas:1-1 Token: '{'
hola			linea 58 columnas:2-5 Token: T_IDENTIFICADOR
(			linea 58 columnas:7-7 Token: '('
fdf			linea 58 columnas:9-11 Token: T_IDENTIFICADOR
)			linea 58 columnas:13-13 Token: ')'
;			linea 58 columnas:14-14 Token: ';'
int			linea 60 columnas:2-4 Token: T_INT
fggf			linea 60 columnas:6-9 Token: T_IDENTIFICADOR
;			linea 60 columnas:10-10 Token: ';'
ReadInteger			linea 62 columnas:2-12 Token: T_IDENTIFICADOR
(			linea 62 columnas:13-13 Token: '('
)			linea 62 columnas:15-15 Token: ')'
;			linea 62 columnas:16-16 Token: ';'
hola			linea 64 columnas:2-5 Token: T_IDENTIFICADOR
=			linea 64 columnas:6-6 Token: '='
d			linea 64 columnas:7-7 Token: T_IDENTIFICADOR
;			linea 64 columnas:8-8 Token: ';'
int			linea 66 columnas:2-4 Token: T_INT
jola			linea 66 columnas:6-9 Token: T_IDENTIFICADOR
;			linea 66 columnas:10-10 Token: ';'
5			linea 68 columnas:2-2 Token: T_CONST_ENTERO (valor = 5)
;			linea 68 columnas:3-3 Token: ';'
hola			linea 70 columnas:2-5 Token: T_IDENTIFICADOR
.			linea 70 columnas:6-6 Token: '.'
metodo			linea 70 columnas:7-12 Token: T_IDENTIFICADOR
(			linea 70 columnas:13-13 Token: '('
5			linea 70 columnas:14-14 Token: T_CONST_ENTERO (valor = 5)
)			linea 70 columnas:16-16 Token: ')'
;			linea 70 columnas:17-17 Token: ';'
int			linea 72 columnas:2-4 Token: T_INT
a			linea 72 columnas:6-6 Token: T_IDENTIFICADOR
;			linea 72 columnas:7-7 Token: ';'
int			linea 73 columnas:2-4 Token: T_INT
b			linea 73 columnas:6-6 Token: T_IDENTIFICADOR
;			linea 73 columnas:7-7 Token: ';'
a			linea 75 columnas:2-2 Token: T_IDENTIFICADOR
=			linea 75 columnas:4-4 Token: '='
2			linea 75 columnas:6-6 Token: T_CONST_ENTERO (valor = 2)
;			linea 75 columnas:7-7 Token: ';'
b			linea 76 columnas:2-2 Token: T_IDENTIFICADOR
=			linea 76 columnas:4-4 Token: '='
a			linea 76 columnas:6-6 Token: T_IDENTIFICADOR
+			linea 76 columnas:8-8 Token: '+'
10			linea 76 columnas:10-11 Token: T_CONST_ENTERO (valor = 10)
;			linea 76 columnas:12-12 Token: ';'
}			linea 79 columnas:1-1 Token: '}'
class			linea 81 columnas:1-5 Token: T_CLASS
prueba			linea 81 columnas:7-12 Token: T_IDENTIFICADOR
extends   linea 81 columnas:14-20 Token: T_EXTENDS
public			linea 81 columnas:22-27 Token: T_IDENTIFICADOR
implements			linea 81 columnas:29-38 Token: T_IMPLEMENTS
gd22			linea 81 columnas:40-43 Token: T_IDENTIFICADOR
{			linea 82 columnas:1-1 Token: '{'
string			linea 83 columnas:2-7 Token: T_STRING
gdf			linea 83 columnas:9-11 Token: T_IDENTIFICADOR
;			linea 83 columnas:12-12 Token: ';'
void			linea 85 columnas:2-5 Token: T_VOID
ojalaFuncione			linea 85 columnas:7-19 Token: T_IDENTIFICADOR
(			linea 85 columnas:21-21 Token: '('
)			linea 85 columnas:23-23 Token: ')'
{			linea 86 columnas:2-2 Token: '{'
}			linea 88 columnas:2-2 Token: '}'
bool			linea 90 columnas:2-5 Token: T_BOOL
ola			linea 90 columnas:7-9 Token: T_IDENTIFICADOR
;			linea 90 columnas:10-10 Token: ';'
}			linea 92 columnas:1-1 Token: '}'
interface			linea 94 columnas:1-9 Token: T_INTERFACE
gg			linea 94 columnas:11-12 Token: T_IDENTIFICADOR
{			linea 95 columnas:1-1 Token: '{'
int			linea 97 columnas:2-4 Token: T_INT
hola			linea 97 columnas:6-9 Token: T_IDENTIFICADOR
(			linea 97 columnas:11-11 Token: '('
)			linea 97 columnas:13-13 Token: ')'
;			linea 97 columnas:14-14 Token: ';'
void			linea 99 columnas:2-5 Token: T_VOID
dfjdfk			linea 99 columnas:7-12 Token: T_IDENTIFICADOR
(			linea 99 columnas:14-14 Token: '('
string			linea 99 columnas:16-21 Token: T_STRING
ff			linea 99 columnas:23-24 Token: T_IDENTIFICADOR
,			linea 99 columnas:26-26 Token: ','
int			linea 99 columnas:28-30 Token: T_INT
hola			linea 99 columnas:32-35 Token: T_IDENTIFICADOR
)			linea 99 columnas:36-36 Token: ')'
;			linea 99 columnas:37-37 Token: ';'
}			linea 100 columnas:1-1 Token: '}'
class			linea 102 columnas:1-5 Token: T_CLASS
prueba			linea 102 columnas:7-12 Token: T_IDENTIFICADOR
extends   linea 102 columnas:14-20 Token: T_EXTENDS
public			linea 102 columnas:22-27 Token: T_IDENTIFICADOR
implements			linea 102 columnas:29-38 Token: T_IMPLEMENTS
gd22			linea 102 columnas:40-43 Token: T_IDENTIFICADOR
{			linea 102 columnas:44-44 Token: '{'
string			linea 104 columnas:2-7 Token: T_STRING
hola			linea 104 columnas:9-12 Token: T_IDENTIFICADOR
()			linea 104 columnas:14-15 Token: '()'
{			linea 105 columnas:2-2 Token: '{'
for			linea 106 columnas:3-5 Token: T_FOR
(			linea 106 columnas:7-7 Token: '('
i			linea 106 columnas:9-9 Token: T_IDENTIFICADOR
=			linea 106 columnas:10-10 Token: '='
0			linea 106 columnas:11-11 Token: T_CONST_ENTERO (valor = 0)
;			linea 106 columnas:12-12 Token: ';'
i			linea 106 columnas:14-14 Token: T_IDENTIFICADOR
<			linea 106 columnas:15-15 Token: '<'
5			linea 106 columnas:16-16 Token: T_CONST_ENTERO (valor = 5)
;			linea 106 columnas:17-17 Token: ';'
i			linea 106 columnas:19-19 Token: T_IDENTIFICADOR
+			linea 106 columnas:20-20 Token: '+'
1			linea 106 columnas:21-21 Token: T_CONST_ENTERO (valor = 1)
)			linea 106 columnas:22-22 Token: ')'
{			linea 107 columnas:3-3 Token: '{'
Malloc			linea 108 columnas:4-9 Token: T_IDENTIFICADOR
(			linea 108 columnas:10-10 Token: '('
hola			linea 108 columnas:11-14 Token: T_IDENTIFICADOR
)			linea 108 columnas:15-15 Token: ')'
;			linea 108 columnas:16-16 Token: ';'
return			linea 110 columnas:4-9 Token: T_RETURN
(			linea 110 columnas:11-11 Token: '('
null			linea 110 columnas:12-15 Token: T_NULL
)			linea 110 columnas:16-16 Token: ')'
;			linea 110 columnas:17-17 Token: ';'
}			linea 111 columnas:3-3 Token: '}'
}			linea 112 columnas:2-2 Token: '}'
}			linea 114 columnas:1-1 Token: '}'
